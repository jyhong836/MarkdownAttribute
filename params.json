{"name":"Markdownattribute","tagline":"A Markdown parser for converting Markdown string to NSAttributedString.","body":"# MarkdownAttribute\r\n\r\nA Markdown parser for converting Markdown string to NSAttributedString. The target is to create an pretty and customizable Markdown-NSAttributedString parser. You can open `MarkdownExample.playground` to view the effect and example.\r\n\r\nThis project uses [MMMarkdown](https://github.com/mdiep/MMMarkdown) to parse markdown string, and use some code from [CocoaMarkdown](https://github.com/indragiek/CocoaMarkdown) to convert them to NSAttributedString. For testing, the test codes from [Markingbird](https://github.com/kristopherjohnson/Markingbird) is used, which are translated from [MarkingSharp](https://code.google.com/p/markdownsharp/). The test benchmarks are original from website, which have been illustrated in `!readme.txt` file in test folders. The license of them have been included in 'LICENSE' file.\r\n\r\n### Intention\r\n\r\nBy using MMMarkdown, you can convert markdown string to NSAttributedString with a workaround: (Markdown → HTML → NSAttributedString)\r\n\r\n```swift\r\nlet html = try MMMarkdown.HTMLStringWithMarkdown(markdownString)\r\nlet astr = NSAttributedString(HTML: html.dataUsingEncoding(NSUnicodeStringEncoding)!, documentAttributes: nil)\r\n```\r\n\r\nAbviously, it's more efficient to convert NSAttributedString directly (Markdown → ~~HTML~~ → NSAttributedString).\r\n\r\nAnd the workaround presented above would be unable to convert image or table(not beatiful at least), which is possible when transform directly.\r\n\r\n### How to use and make customize\r\n\r\nYou can open `MarkdownExample.playground` to view the **example**. Or just try yourself:\r\n\r\n```swift\r\nlet mm = MAMarkdown()\r\nlet astr = try mm.attributedString(markdown: yourMarkdownString)\r\nmm.extensions = MMMarkdownExtensions.GitHubFlavored // Use GFM extension.\r\nlet astr = try MAMarkdown.attributedString(markdown: yourMarkdownString)\r\n```\r\n\r\nAnd it's convenient to apply your text style by create a class that conforms to `MATextAttributesProvider` to provide your attributes.\r\n\r\n```swift\r\nclass YourTextAttributesProvider : MATextAttributesProvider { ... }\r\nlet mm = MAMarkdown(textAttributesProvider: YourTextAttributesProvider())\r\nlet astr = try mm.attributedString(markdown: yourMarkdownString)\r\n```\r\n\r\n### TODO\r\n\r\n- [ ] Complete basic markdown syntax\r\n- [ ] Complete extensions\r\n- [ ] Enable to custom style\r\n\r\n### Setup\r\n\r\nAs moset framework projects, you just need add them to your project or workspace and link them.\r\n\r\n0. Add MarkdownAttribute as a git submodule. (`git submodule add https://github.com/jyhong836/MarkdownAttribute.git <path>`)\r\n\r\n0. Add `MarkdownAttribute.xcodeproj` to your project or workspace\r\n\r\n0. Add `MarkdownAttribute.framework` to the ”Link Binary with Libraries\" section of your project's “Build Phases”.\r\n\r\n0. Add `MarkdownAttribute.framework` to a ”Copy Files” build phase that copies it to the `Frameworks` destination.\r\n\r\n### License\r\n\r\nMarkdownAttribute is available under the [MIT License][].\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}